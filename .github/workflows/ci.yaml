name: Continuous Integration

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
  pull_request:

jobs:
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Format
        run: npm run format
    timeout-minutes: 2
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Lint
        run: npm run lint
    timeout-minutes: 2
  spellCheck:
    name: spellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Spellcheck
        run: npm run spellcheck
    timeout-minutes: 2
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Test - Unit
        run: npm run test:unit
    timeout-minutes: 2
  types:
    name: types
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 15
          registry-url: 'https://npm.pkg.github.com'
      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - name: Types
        run: npm run types
    timeout-minutes: 10
  # cypress-run:
  #   name: cypres test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v2
  #       with:
  #         start: npm run serve
  #         # quote the url to be safe against YML parsing surprises
  #         wait-on: 'http://localhost:8080'
  #   timeout-minutes: 10
